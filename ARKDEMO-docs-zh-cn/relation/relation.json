{
	"api": {
		"": {
			"class": [
				{
					"name": "LoadingUI",
					"description": "//////////////////////////////////////////////////////////////////////////////////////"
				},
				{
					"name": "Main",
					"description": "//////////////////////////////////////////////////////////////////////////////////////"
				},
				{
					"name": "DebugPlatform",
					"description": ""
				},
				{
					"name": "Button",
					"description": ""
				}
			],
			"interface": [
				{
					"name": "Platform",
					"description": "平台数据接口。由于每款游戏通常需要发布到多个平台上，所以提取出一个统一的接口用于开发者获取平台数据信息推荐开发者通过这种方式封装平台逻辑，以保证整体结构的稳定由于不同平台的接口形式各有不同，白鹭推荐开发者将所有接口封装为基于 Promise 的异步形式"
				},
				{
					"name": "Window",
					"description": ""
				}
			]
		},
		"window": {
			"globalMember": [
				{
					"name": "platform",
					"description": ""
				}
			]
		},
		"base": {
			"class": [
				{
					"name": "API",
					"description": ""
				},
				{
					"name": "AssetAdapter",
					"description": ""
				},
				{
					"name": "ThemeAdapter",
					"description": ""
				}
			]
		},
		"game": {
			"class": [
				{
					"name": "CreateGame",
					"description": ""
				},
				{
					"name": "EnterGame",
					"description": ""
				},
				{
					"name": "GamePageOne",
					"description": ""
				},
				{
					"name": "Index",
					"description": ""
				},
				{
					"name": "InviteFriends",
					"description": ""
				},
				{
					"name": "LoadingScene",
					"description": ""
				}
			]
		}
	},
	"other": {
		"global": {
			"class": [
				{
					"name": "Types",
					"description": "基础类型介绍"
				}
			]
		}
	}
}